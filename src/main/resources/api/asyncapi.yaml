asyncapi: 2.3.0
info:
  title: Service Inventory Management
  description: >-
    ## TMF API Reference : TMF 638 - Service Inventory Management

     Version 4.0 

    The intent of this API is to provide a consistent/standardized mechanism to
    query and manipulate the Service inventory.


    The Service Inventory API can be used to query the service instances for a
    customer via Self Service Portal or the Call Centre operator can query the
    service instances on behalf of the customer while a customer may have a
    complaint or a query.

    Note: Only the CustomerFacingServices instances will be presented to the
    customer.


    The Service Inventory API can be called by the Service Order Management to
    create a new service instance/ update an existing service instance in the
    Service Inventory.


    ### Service resource

    Service is an abstract base class for defining the Service hierarchy. All
    Services are characterized as either being possibly visible and usable by a
    Customer or not. This gives rise to the two subclasses of  Service:
    CustomerFacingService and ResourceFacingService.


    ### Service Inventory API performs the following operations on service  :

    - Retrieve  a service or a collection of services depending on filter
    criteria

    - Partial update of a service (including updating rules)

    - Create a service (including default values and creation rules and for
    administration users only)

    - Delete a service (for administration users only)

    - Notification of events on service


    Copyright (c)TM Forum 2019. All Rights Reserved.
  version: 4.0.0
tags:
  - name: service
servers:
  KafkaServer:
    protocol: kafka
    url: localhost:9092
    description: Apache Kafka Bus  

channels:
  TMF638.patchService.in:
    publish:
      operationId: patchServiceRequest
      summary: Updates partially a Service
      tags:
        - name: service
      description: This operation updates partially a Service entity.
      message:
        $ref: '#/components/messages/PatchServiceRequest'
  TMF638.patchService.TMFC007.out:
    subscribe:
      operationId: patchServiceResponse
      tags:
        - name: service
      message:
        $ref: '#/components/messages/PatchServiceResponse'
  TMF638.createService.in:
    publish:
      operationId: createServiceRequest
      summary: Creates a Service
      tags:
        - name: service
      description: This operation creates a Service entity.
      message:
        $ref: '#/components/messages/CreateServiceRequest'
  TMF638.createService.TMFC007.out:
    subscribe:
      operationId: createServiceResponse
      tags:
        - name: service
      message:
        $ref: '#/components/messages/CreateServiceResponse'
  TMF638.service.notification:
    publish:
      operationId: serviceNotification
      tags:
        - name: service
      message:
        $ref: '#/components/messages/ServiceNotification'
components:
  schemas:
    OrderItemActionType:
      type: string
      description: action to be performed on the product
      enum:
        - add
        - modify
        - delete
        - noChange
    Place:
      type: object
      description: >-
        Place reference. Place defines the places where the products are sold or
        delivered.
      properties:
        href:
          type: string
          description: Unique reference of the place
        id:
          type: string
          description: Unique identifier of the place
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        name:
          type: string
          description: >-
            A user-friendly name for the place, such as [Paris Store], [London
            Store], [Main Home]
    RelatedServiceOrderItem:
      type: object
      description: >-
        RelatedServiceOrderItem (a ServiceOrder item) .The service order item
        which triggered service creation/change/termination.
      required:
        - itemId
        - serviceOrderId
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        itemAction:
          description: Action of the order item for this service
          $ref: '#/components/schemas/OrderItemActionType'
        itemId:
          type: string
          description: Identifier of the order item where the service was managed
        role:
          type: string
          description: role of the service order item for this service
        serviceOrderHref:
          type: string
          description: Reference of the related entity.
        serviceOrderId:
          type: string
          description: Unique identifier of a related entity.
    RelatedPlaceRefOrValue:
      type: object
      description: >-
        Related Entity reference. A related place defines a place described by
        reference or by value linked to a specific entity. The polymorphic
        attributes @type, @schemaLocation & @referredType are related to the
        place entity and not the RelatedPlaceRefOrValue class itself
      required:
        - role
      properties:
        href:
          type: string
          description: Unique reference of the place
        id:
          type: string
          description: Unique identifier of the place
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: >-
            A user-friendly name for the place, such as [Paris Store], [London
            Store], [Main Home]
        role:
          type: string
    RelatedParty:
      type: object
      description: >-
        Related Entity reference. A related party defines party or party role
        linked to a specific entity.
      required:
        - '@referredType'
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
          description: Role played by the related party
    Characteristic:
      type: object
      description: >-
        Describes a given characteristic of an object or entity through a
        name/value pair.
      required:
        - name
        - value
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        characteristicRelationship:
          type: array
          items:
            $ref: '#/components/schemas/CharacteristicRelationship'
        id:
          type: string
          description: Unique identifier of the characteristic
        name:
          type: string
          description: Name of the characteristic
        value:
          description: The value of the characteristic
          $ref: '#/components/schemas/Any'
        valueType:
          type: string
          description: Data type of the value of the characteristic
    PlaceRef:
      type: object
      description: >-
        Place reference. PlaceRef defines the placeRefs where the products are
        sold or delivered.
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
    CharacteristicRelationship:
      type: object
      description: Another Characteristic that is related to the current Characteristic.
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: Unique identifier of the characteristic
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        relationshipType:
          type: string
          description: The type of relationship
    EntityRef:
      type: object
      description: Entity reference schema to be use for all entityRef class.
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
    Error:
      type: object
      description: >-
        Used when an API throws an Error, typically with a HTTP error
        response-code (3xx, 4xx, 5xx)
      required:
        - code
        - reason
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        code:
          type: string
          description: 'Application relevant detail, defined in the API or a common list.'
        message:
          type: string
          description: >-
            More details and corrective actions related to the error which can
            be shown to a client user.
        reason:
          type: string
          description: >-
            Explanation of the reason for the error which can be shown to a
            client user.
        referenceError:
          type: string
          format: uri
          description: URI of documentation describing the error.
        status:
          type: string
          description: HTTP Error code extension
    Any: {}
    Feature:
      type: object
      description: Configuration feature.
      required:
        - featureCharacteristic
        - id
        - name
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: Unique identifier of the feature.
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        constraint:
          type: array
          items:
            $ref: '#/components/schemas/ConstraintRef'
          description: This is a list of feature constraints.
        featureCharacteristic:
          type: array
          minItems: 1
          items:
            $ref: '#/components/schemas/Characteristic'
          description: This is a list of Characteristics for a particular feature.
        featureRelationship:
          type: array
          items:
            $ref: '#/components/schemas/FeatureRelationship'
        isBundle:
          type: boolean
          description: True if this is a feature group. Default is false.
        isEnabled:
          type: boolean
          description: True if this feature is enabled. Default is true.
        name:
          type: string
          description: This is the name for the feature.
    Extensible:
      type: object
      description: Base Extensible schema for use in TMForum Open-APIs
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    Note:
      type: object
      description: Extra information about a given entity
      required:
        - text
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        author:
          type: string
          description: Author of the note
          example:
            - Mr. N. Bene
        date:
          type: string
          format: date-time
          description: Date of the note
          example:
            - '2020-11-20T08:00:00Z'
        id:
          type: string
          description: Identifier of the note within its containing entity
          example:
            - afa9-3d90aaa8da0f
        text:
          type: string
          description: Text of the note
          example:
            - This is important
    ServiceStateType:
      type: string
      description: Valid values for the lifecycle state of the service
      enum:
        - feasibilityChecked
        - designed
        - reserved
        - inactive
        - active
        - terminated
    RelatedEntityRefOrValue:
      type: object
      description: >-
        A reference to an entity, where the type of the entity is not known in
        advance. A related entity defines a entity described by reference or by
        value linked to a specific entity. The polymorphic attributes @type,
        @schemaLocation & @referredType are related to the Entity and not the
        RelatedEntityRefOrValue class itself
      required:
        - '@referredType'
        - id
        - role
      properties:
        href:
          type: string
          description: Reference of the related entity.
        id:
          type: string
          description: Unique identifier of a related entity.
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        role:
          type: string
    ConstraintRef:
      type: object
      description: >-
        Constraint reference. The Constraint resource represents a policy/rule
        applied to an entity or entity spec.
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: constraint version
    Service:
      $id: Service
      type: object
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.
      properties:
        href:
          type: string
          description: Reference of the service
        id:
          type: string
          description: Unique identifier of the service
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        hasStarted:
          type: boolean
          description: 'If TRUE, this Service has already been started'
        isBundle:
          type: boolean
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
        isServiceEnabled:
          type: boolean
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
        isStateful:
          type: boolean
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
        name:
          type: string
          description: Name of the service
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
        serviceSpecification:
          description: The specification from which this service was instantiated
          $ref: '#/components/schemas/ServiceSpecificationRef'
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
        state:
          description: >-
            The life cycle state of the service, such as designed, reserved,
            active, etc...
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
    Entity:
      type: object
      description: Base entity schema for use in TMForum Open-APIs
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    ServiceSpecificationRef:
      $id: ServiceSpecificationRef
      type: object
      description: >-
        Service specification reference: ServiceSpecification(s) required to
        realize a ProductSpecification.
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
        version:
          type: string
          description: Service specification version
    ServiceRelationship:
      type: object
      required:
        - relationshipType
        - service
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        relationshipType:
          type: string
        service:
          $ref: '#/components/schemas/ServiceRefOrValue'
        serviceRelationshipCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
    FeatureRelationship:
      type: object
      description: Configuration feature
      required:
        - name
        - relationshipType
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: Unique identifier of the target feature.
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        name:
          type: string
          description: This is the name of the target feature.
        relationshipType:
          type: string
          description: This is the type of the feature relationship.
          enum:
            - excluded
            - includes
            - may include
            - requires
        validFor:
          $id: FeatureRelationshipValidFor
          description: The period for which this feature relationship is valid.
          $ref: '#/components/schemas/TimePeriod'
    ReferredType:
      type: object
      description: A referred entity
      properties:
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
    ServiceRef:
      type: object
      description: 'Service reference, for when Service is used by other entities'
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
    ServiceRefOrValue:
      type: object
      description: >-
        A Service to be created defined by value or existing defined by
        reference. The polymorphic attributes @type, @schemaLocation &
        @referredType are related to the Service entity and not the
        RelatedServiceRefOrValue class itself
      required:
        - id
      properties:
        href:
          type: string
          description: Reference of the service
        id:
          type: string
          description: Unique identifier of the service
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the service
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        hasStarted:
          type: boolean
          description: 'If TRUE, this Service has already been started'
        isBundle:
          type: boolean
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
        isServiceEnabled:
          type: boolean
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
        isStateful:
          type: boolean
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
        serviceSpecification:
          description: The specification from which this service was instantiated
          $ref: '#/components/schemas/ServiceSpecificationRef'
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
        state:
          description: >-
            The life cycle state of the service, such as designed, reserved,
            active, etc...
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
    ResourceRef:
      type: object
      required:
        - id
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        '@referredType':
          type: string
          description: >-
            The actual type of the target instance when needed for
            disambiguation.
        name:
          type: string
          description: Name of the related entity.
    Addressable:
      type: object
      description: Base schema for adressable entities
      properties:
        href:
          type: string
          format: uri
          description: Hyperlink reference
        id:
          type: string
          description: unique identifier
    EntityValue:
      type: object
      description: Base entity value  schema for use in TMForum Open-APIs
      properties:
        href:
          type: string
          description: Reference of the related entity.
        id:
          type: string
          description: Unique identifier of a related entity.
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
    TimePeriod:
      type: object
      description: >-
        A period of time, either as a deadline (endDateTime only) a
        startDateTime only, or both
      properties:
        endDateTime:
          type: string
          format: date-time
          description: 'End of the time period, using IETC-RFC-3339 format'
          example: '1985-04-12T23:20:50.52Z'
        startDateTime:
          type: string
          format: date-time
          description: 'Start of the time period, using IETC-RFC-3339 format'
          example: '1985-04-12T23:20:50.52Z'
    ServiceUpdate:
      type: object
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.

        Skipped properties: href,id,serviceDate
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        hasStarted:
          type: boolean
          description: 'If TRUE, this Service has already been started'
        isBundle:
          type: boolean
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
        isServiceEnabled:
          type: boolean
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
        isStateful:
          type: boolean
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
        name:
          type: string
          description: Name of the service
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
        serviceSpecification:
          description: The specification from which this service was instantiated
          $ref: '#/components/schemas/ServiceSpecificationRef'
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
        state:
          description: >-
            The life cycle state of the service, such as designed, reserved,
            active, etc...
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
    ServiceCreate:
      type: object
      description: >-
        Service is a base class for defining the Service hierarchy. All Services
        are characterized as either being possibly visible and usable by a
        Customer or not. This gives rise to the two subclasses of Service:
        CustomerFacingService and ResourceFacingService.

        Skipped properties: href,id
      required:
        - serviceSpecification
        - state
      properties:
        '@baseType':
          type: string
          description: 'When sub-classing, this defines the super-class'
        '@schemaLocation':
          type: string
          format: uri
          description: >-
            A URI to a JSON-Schema file that defines additional attributes and
            relationships
        '@type':
          type: string
          description: 'When sub-classing, this defines the sub-class Extensible name'
        category:
          type: string
          description: Is it a customer facing or resource facing service
        description:
          type: string
          description: Free-text description of the service
        endDate:
          type: string
          format: date-time
          description: Date when the service ends
        feature:
          type: array
          items:
            $ref: '#/components/schemas/Feature'
          description: 'A list of feature associated with this service '
        hasStarted:
          type: boolean
          description: 'If TRUE, this Service has already been started'
        isBundle:
          type: boolean
          description: >-
            If true, the service is a ServiceBundle which regroup a service
            hierachy. If false, the service is a 'atomic' service (hierachy
            leaf).
        isServiceEnabled:
          type: boolean
          description: >-
            If FALSE and hasStarted is FALSE, this particular Service has NOT
            been enabled for use - if FALSE and hasStarted is TRUE then the
            service has failed 
        isStateful:
          type: boolean
          description: >-
            If TRUE, this Service can be changed without affecting any other
            services
        name:
          type: string
          description: Name of the service
        note:
          type: array
          items:
            $ref: '#/components/schemas/Note'
          description: A list of notes made on this service
        place:
          type: array
          items:
            $ref: '#/components/schemas/RelatedPlaceRefOrValue'
          description: >-
            A list of places (Place [*]). Used to define a place useful for the
            service (for example a geographical place whre the service is
            installed)
        relatedEntity:
          type: array
          items:
            $ref: '#/components/schemas/RelatedEntityRefOrValue'
          description: 'A list of related  entity in relationship with this service '
        relatedParty:
          type: array
          items:
            $ref: '#/components/schemas/RelatedParty'
          description: >-
            A list of related party references (RelatedParty [*]). A related
            party defines party or party role linked to a specific entity
        serviceCharacteristic:
          type: array
          items:
            $ref: '#/components/schemas/Characteristic'
          description: >-
            A list of characteristics that characterize this service
            (ServiceCharacteristic [*]) 
        serviceDate:
          type: string
          description: Date when the service was created (whatever its status).
        serviceOrderItem:
          type: array
          items:
            $ref: '#/components/schemas/RelatedServiceOrderItem'
          description: A list of service order items related to this service
        serviceRelationship:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRelationship'
          description: >-
            A list of service relationships (ServiceRelationship [*]). Describes
            links with other service(s) in the inventory.
        serviceSpecification:
          description: The specification from which this service was instantiated
          $ref: '#/components/schemas/ServiceSpecificationRef'
        serviceType:
          type: string
          description: Business type of the service
        startDate:
          type: string
          format: date-time
          description: Date when the service starts
        startMode:
          type: string
          description: >-
            This attribute is an enumerated integer that indicates how the
            Service is started, such as: 0: Unknown; 1: Automatically by the
            managed environment; 2: Automatically by the owning device; 3:
            Manually by the Provider of the Service; 4: Manually by a Customer
            of the Provider; 5: Any of the above
        state:
          description: >-
            The life cycle state of the service, such as designed, reserved,
            active, etc...
          $ref: '#/components/schemas/ServiceStateType'
        supportingResource:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRef'
          description: >-
            A list of supporting resources (SupportingResource [*]).Note: only
            Service of type RFS can be associated with Resources
        supportingService:
          type: array
          items:
            $ref: '#/components/schemas/ServiceRefOrValue'
          description: >-
            A list of supporting services (SupportingService [*]). A collection
            of services that support this service (bundling, link CFS to RFS)
    RetrieveServiceSuccess:
      type: object
      description: Success
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          $ref: '#/components/schemas/Service'
      required:
        - statusCode
        - body
    BadRequestResponse:
      type: object
      description: Bad Request
      properties:
        statusCode:
          const: 400
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    UnauthorizedResponse:
      type: object
      description: Unauthorized
      properties:
        statusCode:
          const: 401
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    ForbiddenResponse:
      type: object
      description: Forbidden
      properties:
        statusCode:
          const: 403
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    NotFoundResponse:
      type: object
      description: Not Found
      properties:
        statusCode:
          const: 404
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    MethodNotAllowedResponse:
      type: object
      description: Method Not allowed
      properties:
        statusCode:
          const: 405
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    ConflictResponse:
      type: object
      description: Conflict
      properties:
        statusCode:
          const: 409
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    InternalServerErrorResponse:
      type: object
      description: Internal Server Error
      properties:
        statusCode:
          const: 500
          type: integer
        body:
          $ref: '#/components/schemas/Error'
      required:
        - statusCode
        - body
    RetrieveServiceResponsePayload:
      discriminator: "statusCode"
      oneOf:
        - $ref: '#/components/schemas/RetrieveServiceSuccess'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    RetrieveServiceRequestPayload:
      type: object
      properties:
        parameters:
          $id: RetrieveServiceRequestPayloadParameters
          type: object
          properties:
            id:
              description: Identifier of the Service
              type: string
            fields:
              description: Comma-separated properties to provide in response
              type: string
          required:
            - id
        filters:
          $id: RetrieveServiceRequestPayloadFilters
          type: object
          additionalProperties:
            type: string
      required:
        - parameters
    ListServiceSuccess:
      type: object
      description: Success
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          type: array
          items:
            $ref: '#/components/schemas/Service'
        headers:
          properties:
            X-Result-Count:
              description: Actual number of items returned in the response body
              type: integer
            X-Total-Count:
              description: Total number of items matching criteria
              type: integer
      required:
        - statusCode
        - body
    ListServiceResponsePayload:
      discriminator: "statusCode"
      oneOf:
        - $ref: '#/components/schemas/ListServiceSuccess'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    ListServiceRequestPayload:
      type: object
      properties:
        parameters:
          $id: ListServiceRequestPayloadParameters
          type: object
          properties:
            fields:
              description: Comma-separated properties to be provided in response
              type: string
            offset:
              description: >-
                Requested index for start of resources to be provided in
                response
              type: integer
            limit:
              description: Requested number of resources to be provided in response
              type: integer
          required: []
        filters:
          $id: ListServiceRequestPayloadFilters
          type: object
          additionalProperties:
            type: string
      required:
        - parameters
    PatchServiceUpdated:
      type: object
      description: Updated
      properties:
        statusCode:
          const: 200
          type: integer
        body:
          $ref: '#/components/schemas/Service'
      required:
        - statusCode
        - body
    PatchServiceResponsePayload:
      discriminator: "statusCode"
      oneOf:
        - $ref: '#/components/schemas/PatchServiceUpdated'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    PatchServiceRequestPayload:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/ServiceUpdate'
        parameters:
          $id: PatchServiceRequestPayloadParameters
          type: object
          properties:
            id:
              description: Identifier of the Service
              type: string
          required:
            - id
      required:
        - body
        - parameters
    CreateServiceCreated:
      type: object
      description: Created
      properties:
        statusCode:
          const: 201
          type: integer
        body:
          $ref: '#/components/schemas/Service'
      required:
        - statusCode
        - body
    CreateServiceResponsePayload:
      discriminator: "statusCode"
      oneOf:
        - $ref: '#/components/schemas/CreateServiceCreated'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    CreateServiceRequestPayload:
      type: object
      properties:
        body:
          $ref: '#/components/schemas/ServiceCreate'
      required:
        - body
    DeleteServiceDeleted:
      type: object
      description: Deleted
      properties:
        statusCode:
          const: 204
          type: integer
      required:
        - statusCode
    DeleteServiceResponsePayload:
      discriminator: "statusCode"
      oneOf:
        - $ref: '#/components/schemas/DeleteServiceDeleted'
        - $ref: '#/components/schemas/BadRequestResponse'
        - $ref: '#/components/schemas/UnauthorizedResponse'
        - $ref: '#/components/schemas/ForbiddenResponse'
        - $ref: '#/components/schemas/NotFoundResponse'
        - $ref: '#/components/schemas/MethodNotAllowedResponse'
        - $ref: '#/components/schemas/ConflictResponse'
        - $ref: '#/components/schemas/InternalServerErrorResponse'
    DeleteServiceRequestPayload:
      type: object
      properties:
        parameters:
          $id: DeleteServiceRequestPayloadParameters
          type: object
          properties:
            id:
              description: Identifier of the Service
              type: string
          required:
            - id
      required:
        - parameters
    ServiceEventPayload:
      $id: ServiceEventPayload
      type: object
      description: The event data structure
      properties:
        service:
          description: The involved resource data for the event
          $ref: '#/components/schemas/Service'
    ServiceBaseEvent:
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/ServiceEventPayload'
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          enum:
            - create
            - delete
            - stateChange
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
    ServiceBasePlusEvent:
      type: object
      description: The notification data structure
      properties:
        correlationId:
          description: The correlation id for this event.
          type: string
        description:
          description: An explnatory of the event.
          type: string
        domain:
          description: The domain of the event.
          type: string
        eventId:
          description: The identifier of the notification.
          type: string
        eventTime:
          description: Time of the event occurrence.
          format: date-time
          type: string
        eventType:
          description: The type of the notification.
          type: string
          enum:
            - attributeValueChange
        fieldPath:
          description: >-
            The path identifying the object field concerned by this
            notification.
          type: string
        priority:
          description: A priority.
          type: string
        timeOcurred:
          description: The time the event occured.
          format: date-time
          type: string
        title:
          description: The title of the event.
          type: string
        event:
          description: The event payload linked to the involved resource object
          $ref: '#/components/schemas/ServiceEventPayload'
    ServiceNotificationPayload:
      discriminator: "eventType"
      oneOf:
        - $ref: '#/components/schemas/ServiceBaseEvent'
        - $ref: '#/components/schemas/ServiceBasePlusEvent'
    CorrelationHeader:
      type: object
      properties:
        CORRELATION_ID:
          description: Correlation ID set by application
          type: string
          format: uuid
      required:
        - CORRELATION_ID
    RequestHeaders:
      $id: RequestHeaders
      allOf:
        - type: object
          properties:
            APPLICATION:
              type: string
              description: Name of the calling application.
          required:
            - APPLICATION
        - $ref: '#/components/schemas/CorrelationHeader'
  messages:
    RetrieveServiceRequest:
      name: RetrieveServiceRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/RetrieveServiceRequestPayload'
    RetrieveServiceResponse:
      name: RetrieveServiceResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/RetrieveServiceResponsePayload'
    ListServiceRequest:
      name: ListServiceRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/ListServiceRequestPayload'
    ListServiceResponse:
      name: ListServiceResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/ListServiceResponsePayload'
    PatchServiceRequest:
      name: PatchServiceRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/PatchServiceRequestPayload'
    PatchServiceResponse:
      name: PatchServiceResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/PatchServiceResponsePayload'
    CreateServiceRequest:
      name: CreateServiceRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/CreateServiceRequestPayload'
    CreateServiceResponse:
      name: CreateServiceResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/CreateServiceResponsePayload'
    DeleteServiceRequest:
      name: DeleteServiceRequest
      headers:
        $ref: '#/components/schemas/RequestHeaders'
      payload:
        $ref: '#/components/schemas/DeleteServiceRequestPayload'
    DeleteServiceResponse:
      name: DeleteServiceResponse
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/DeleteServiceResponsePayload'
    ServiceNotification:
      name: ServiceNotification
      headers:
        $ref: '#/components/schemas/CorrelationHeader'
      payload:
        $ref: '#/components/schemas/ServiceNotificationPayload'
  correlationIds:
    default:
      description: Default Correlation ID
      location: '$message.header#/CORRELATION_ID'
